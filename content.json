{"pages":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/hello-world.html"}],"posts":[{"title":"Here are some GGultips !","text":"1. Deploy 안 될 때.(로컬과 다를때) 12$ hexo clean $ hexo g -d 습관적으로 deploy 하기 전에 $hexo clean 실행하자. 2. config.yml 안먹는다 싶을 때 해당 Theme 의 pakage.json 파일 경로 확인해보자. 3. config.yml 위치 기본은 _config.yml 이지만, 테마 다운로드하여 생긴 파일은 _config.테마이름.yml 으로 생긴다.테마관련 config 정보 수정 시, _config.테마이름.yml 수정하면 된다. 4. Github URL : username.githou.io 형식으로 해야 예쁘게 만들어진다 5. deploy하는 작업이 귀찮을 때 어떻게 해야할 지 알아보자. 6. index 페이지에 deploy 제대로 안 될 때 (post 글 수정 시, detail 페이지 내용은 수정되고, 인덱스에 보여지는 summary에는 수정이 안 됨.)어떻게 해야할 지 알아보자.-&gt; 시간차가 발생하는 듯.(5분정도)","link":"/2020/12/23/Here-are-some-GGultips/"},{"title":"How to use &#39;Markdown&#39;","text":"1. Text AttributesCode123* Make **BOLD** , __BOLD__* Make *ITALIC* , _ITALIC_* Make ~~strikethrough~~ Result Make a BOLD , BOLD Make a ITALIC , ITALIC Make strikethrough 2. QuoteCode1&gt; Don't forget to code your dream. Result Don’t forget to code your dream. 3. Bullet ListCode123456789* apple* banana- melon- avocado1. first2. second3. third Result apple banana melon avocado first second third 4. LinkCode1Click [here to visit my blog](https://hypark31.github.io/) ResultClick here to visit my blog 5. ImageCode1![ image](https://images.ctfassets.net/hrltx12pl8hq/5GaLeZJlLyOiQC4gOA0qUM/a0398c237e9744ade8b072f99349e07a/shutterstock_152461202_thumb.jpg?fit=fill&amp;w=480&amp;h=270) Result 6. TableCode123|header|Description| |--:|:--:| &lt;!-- ':' 은 정렬을 나타냄 --&gt;|cell1|cell2| Result header Description cell1 cell2 7. CodeCode1234'''js &lt;!-- language에 따른 syntax highlight 가능 --&gt;console.log(&quot;print log&quot;);alert(&quot; alert!! &quot;);''' &lt;!-- backquote(`) 임 --&gt; Result12console.log(&quot;print log&quot;);alert(&quot; alert!! &quot;); ReferenceYoutube - 드림코딩 by 엘리","link":"/2020/12/23/How-to-use-Markdown/"},{"title":"Welcome to Hyoyoung&#39;s Blog","text":"Thanks for visiting","link":"/2020/12/22/Welcome-to-Hyoyoung-s-Blog/"},{"title":"Basic of CSS","text":"1.SELECTORS 기본형식123selector { property: value;} Universal * Type Tag Id #id Class .class state : attribute [] ETC !important : 다른 CSS를 무시하고, 우선시 함. (가능한 사용 자제)","link":"/2021/02/06/Basic-of-CSS/"},{"title":"block&#x2F;inline&#x2F;position","text":"","link":"/2021/02/06/block-inline/"},{"title":"Async &#x2F; Defer 비교 (Defer를 사용해야 하는 이유)","text":"1. head &gt; scripthead 안에 그냥 script를 사용하는 경우 12345&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;script src=&quot;main.js&quot;&gt;&lt;/script&gt;&lt;/head&gt; 처리과정 Issuejs 실행 후 나머지 HTML parsing 하게 된다.js 다운로드가 오래걸리는 경우, page loading이 느려짐. 2. body &gt; script body 마지막에 script 를 넣어주는 경우 12345678&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Document&lt;/title&gt;&lt;/head&gt; &lt;body&gt; &lt;div&gt;&lt;/div&gt; &lt;script src=&quot;main.js&quot;&gt;&lt;/script&gt;&lt;/body&gt; 처리과정 IssueHTML parsing 완료 후, js 실행HTML 로딩은 빠르지만, js에서 동적으로 처리하는 부분을 제대로 볼 수 없음.js fetching/executing 시간을 추가로 더 기달려야함. 3. head + async head 안에 script 에서 async를 사용하는 경우 12345&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;script async src=&quot;main.js&quot;&gt;&lt;/script&gt;&lt;/head&gt; 처리과정 Issuejs fetching 시간은 절약.뒷부분 HTML 요소가 정의되기 전에 js가 실행 됨.js 실행이 오래결리는 경우, page loading 이 느려짐. 4. head + defer (** 이상적인 방법 **) head 안에 script 에서 async를 사용하는 경우12345&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;title&gt;Document&lt;/title&gt; &lt;script defer src=&quot;main.js&quot;&gt;&lt;/script&gt;&lt;/head&gt; 처리과정 5. async / defer 차이 (부가설명) 여러개의 js 파일을 불러오는경우async : fetching 되는 js 순서대로 실행 함. (!순서의존적인 경우, 문제발생)defer : 선언된 js 순서대로 실행 함. Referenced by Youtube - 드림코딩 by 엘리 8:34~","link":"/2021/02/13/Async-Defer/"}],"tags":[{"name":"PersonalTips","slug":"PersonalTips","link":"/tags/PersonalTips/"},{"name":"Markdown","slug":"Markdown","link":"/tags/Markdown/"},{"name":"Intro","slug":"Intro","link":"/tags/Intro/"},{"name":"CSS","slug":"CSS","link":"/tags/CSS/"},{"name":"Javascript","slug":"Javascript","link":"/tags/Javascript/"}],"categories":[{"name":"Development","slug":"Development","link":"/categories/Development/"},{"name":"Intro","slug":"Intro","link":"/categories/Intro/"},{"name":"Javascript","slug":"Javascript","link":"/categories/Javascript/"}]}